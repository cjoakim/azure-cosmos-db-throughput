/*
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/building_java_projects.html
 */

plugins {
    id 'application'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.google.code.gson:gson:2.10'
    implementation "com.azure:azure-cosmos:4.48.2"
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.3'
    implementation 'com.github.javafaker:javafaker:1.0.2'
    implementation 'com.opencsv:opencsv:5.8'
    implementation 'org.apache.logging.log4j:log4j-api:2.21.1'
    implementation 'org.apache.logging.log4j:log4j-core:2.21.1'
    implementation 'org.projectlombok:lombok:1.18.22'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.21.1'

    // lombok, see https://projectlombok.org
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'

    testImplementation 'junit:junit:4.13.2'
}

application {
    mainClass = 'org.cjoakim.cosmos.App'
}

// Several tasks/scenarios are defined below
// These pass different command-line args to the main program.

task throughput_test_low_priority(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'org.cjoakim.cosmos.App'
    args 'throughput_test', '--priority', 'dev', 'test', 'all', '50', '--priority-low'
    //  'dev' = the Cosmos DB database to be loaded
    // 'test' = the Cosmos DB container to be loaded
    //    all = just the New York Yankees baseball players
    //    all = all baseball players on all teams
    //   '50' = batch size
}

task throughput_test_high_priority(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'org.cjoakim.cosmos.App'
    args 'throughput_test', '--priority', 'dev', 'test', 'all', '50', '--priority-high'
}

task throughput_test_ru_limited_local(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'org.cjoakim.cosmos.App'
    args 'throughput_test', '--local', 'dev', 'test', 'all',  '50', '--ru', '400'
}

task throughput_test_ru_limited_global(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'org.cjoakim.cosmos.App'
    args 'throughput_test', '--global', 'dev', 'test', 'all',  '50', '--ru', '400'
}

task throughput_test_pct_limited_local(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'org.cjoakim.cosmos.App'
    args 'throughput_test', '--local', 'dev', 'test', 'all',  '50', '--pct', '0.25'
}

task throughput_test_pct_limited_global(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'org.cjoakim.cosmos.App'
    args 'throughput_test', '--global', 'dev', 'test', 'all',  '50', '--pct', '0.25'
}

task gmt_time_generated_kql(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'org.cjoakim.cosmos.App'
    args 'gmt_time_generated_kql'
}
